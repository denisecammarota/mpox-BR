))
table(df$ident_genero)
table(df$cs_sexo, df$ident_genero)
df <- df %>% mutate(
comp_sexual = case_when(
COMP_SEXUAL == 1 ~ 'Relacoes sexuais com homens',
COMP_SEXUAL == 2 ~ 'Relacoes sexuais com mulheres',
COMP_SEXUAL == 3 ~ 'Relacoes sexuais com homens e mulheres',
COMP_SEXUAL == 9 ~ 'Ignorado ou Nao se aplica',
)
)
table(df$comp_sexual)
table(df$cs_sexo, df$comp_sexual)
table(df$comp_sexual, df$cs_sexo)
df <- df %>% mutate(
orienta_sexual = case_when(
ORIENTA_SEXUAL == 1 ~ 'Heterosexual',
ORIENTA_SEXUAL == 2 ~ 'Homossexual',
ORIENTA_SEXUAL == 3 ~ 'Bissexual',
ORIENTA_SEXUAL == 4 ~ 'Outra ',
ORIENTA_SEXUAL == 7 ~ 'Nao se aplica',
T ~ 'Ignorado'
)
)
table(df$orienta_sexual)
table(df$orienta_sexual, df$cs_sexo)
table(df$comp_sexual, df$cs_sexo)
table(df$comp_sexual, df$ident_genero)
hist(df$NU_IDADE_N)
# Probable source/place of infection ########################
df <- df %>% mutate(local_cont = case_when(
LOCAL_CONT == 1 ~ 'Domicilio',
LOCAL_CONT == 2 ~ 'Vizinhança',
LOCAL_CONT == 3 ~ 'Trabalho',
LOCAL_CONT == 4 ~ 'Creche/Escola',
LOCAL_CONT == 5 ~ 'Posto de Saude/Hospital',
LOCAL_CONT == 6 ~ 'Evento social (não sexual)',
LOCAL_CONT == 7 ~ 'Evento social (sexual)',
LOCAL_CONT == 8 ~ 'Outro',
T ~ 'Ignorado'
))
table(df$local_cont)
# Evolução ##############################################
df <- df %>% mutate(evolucao = case_when(
EVOLUCAO == 1 ~ 'Óbito por mpox',
EVOLUCAO == 2 ~ 'Cura',
EVOLUCAO == 3 ~ 'Óbito por outras causas',
EVOLUCAO == 4 ~ 'Em tratamento',
T ~ 'Ignorado'
))
table(df$evolucao)
# Incidence per state #######################################
pop <- read.csv2('pop_uf.csv')
pop <- pop %>% mutate(uf = substr(Unidade.da.Federacao, 1, 2)) %>%
select(!Unidade.da.Federacao) %>% select(uf, Populacao_residente)
pop <- pop %>% mutate(uf = as.numeric(uf))
pop
map_br <- read_state(code_state = 'all', year = 2020)
map_br <- map_br %>% left_join(pop, by = join_by(code_state == uf))
df_total <- df %>% mutate(sg_code = substr(ID_MN_RESI, 1, 2)) %>%
group_by(sg_code) %>% summarise(cases = n())
df_total <- df_total %>% ungroup()
df_total <- df_total %>% mutate(sg_code = as.numeric(sg_code))
map_br <- map_br %>% left_join(df_total, by = join_by(code_state == sg_code))
map_br <- map_br %>% mutate(incidence = (10**5)*(cases/Populacao_residente))
ggplot(data = map_br) +
geom_sf(aes(fill = incidence)) +
scale_fill_viridis_c() +
theme_map()
table(df$SG_UF)
# Incidence per municipality ###################################
pop <- read.csv2('pop_mun.csv')
pop <- pop %>% mutate(mun = substr(Municipio, 1, 6)) %>%
select(!Municipio) %>% select(mun, Populacao_residente)
pop <- pop %>% mutate(mun = as.numeric(mun))
pop
map_br <- read_municipality(year = 2020)
map_br <- map_br %>% mutate(code_muni_6 = substr(code_muni, 1, 6))
map_br <- map_br %>% mutate(code_muni_6 = as.numeric(code_muni_6))
map_br <- map_br %>% left_join(pop, by = join_by(code_muni_6 == mun))
df_total <- df %>% mutate(mun_code = ID_MN_RESI) %>%
group_by(mun_code) %>% summarise(cases = n())
df_total <- df_total %>% ungroup()
df_total <- df_total %>% mutate(mun_code = as.numeric(mun_code))
map_br <- map_br %>% left_join(df_total, by = join_by(code_muni_6 == mun_code))
map_br <- map_br %>% mutate(incidence = (10**5)*(cases/Populacao_residente))
ggplot(data = map_br) +
geom_sf(aes(fill = incidence)) +
scale_fill_viridis_c() +
theme_map()
table(df$SG_UF)
# Timeseries per state ########################################
df <- df %>% mutate(dt_sin_pri = dmy(DT_SIN_PRI)) %>%
mutate(anoepi = epiyear(dt_sin_pri))
table(df$anoepi)
# Timeseries per state ########################################
df <- df %>% mutate(dt_sin_pri = dmy(DT_SIN_PRI)) %>%
mutate(anoepi = epiyear(dt_sin_pri)) %>%
mutate(epiweek = epiweek(dt_sin_pri))
df <- df %>% mutate(sg_code = substr(ID_MN_RESI, 1, 2)) %>%
group_by(anoepi, epiweek, sg_code) %>% summarise(cases = n())
df
df <- df %>% mutate(tplot = anoepi + (epiweek/52)) %>%
select(sg_code, tplot, cases)
pop <- read.csv2('pop_uf.csv')
pop <- pop %>% mutate(uf = substr(Unidade.da.Federacao, 1, 2)) %>%
select(!Unidade.da.Federacao) %>% select(uf, Populacao_residente)
pop <- pop %>% mutate(uf = as.numeric(uf))
pop
df <- df %>% left_join(pop, by = join_by(sg_code == uf))
df <- df %>% mutate(sg_code = as.numeric(sg_code))
df <- df %>% left_join(pop, by = join_by(sg_code == uf))
df
df <- df %>% mutate(incidence = (10**5)*(cases/Populacao_residente))
df <- df %>% select(sg_code, tplot, cases, incidence)
df <- df %>% ungroup() %>% select(sg_code, tplot, cases, incidence)
df
ggplot(data = df, aes(x = tplot, y = incidence, color = incidence)) +
geom_line() +
theme_bw()
ggplot(data = df, aes(x = tplot, y = incidence, color = sg_code)) +
geom_line() +
theme_bw()
df <- df %>% mutate(sg_code = as.factor(as.character(sg_code)))
df
ggplot(data = df, aes(x = tplot, y = incidence, color = sg_code)) +
geom_line() +
theme_bw()
ggplot(data = df, aes(x = tplot, y = incidence, color = sg_code)) +
geom_point() +
theme_bw()
# Timeseries per state ########################################
df <- df %>% mutate(dt_sin_pri = dmy(DT_SIN_PRI)) %>%
mutate(anoepi = epiyear(dt_sin_pri)) %>%
mutate(epiweek = epiweek(dt_sin_pri))
library(readr)
library(tidyverse)
library(lubridate)
library(geobr)
library(ggplot2)
library(ggthemes)
# Loading data ##################################################
list_of_files <- list.files(path = "data/",
recursive = FALSE,
pattern = "\\.csv$",
full.names = TRUE)
df <- readr::read_csv2(list_of_files[1:3])
df_2025 <- readr::read_csv2(list_of_files[4])
# Adjusting columns, removing and joining ##############################
setdiff(colnames(df), colnames(df_2025))
setdiff(colnames(df_2025), colnames(df))
cols_to_remove <- c('FAIXA_ETARIA', 'LESAO', 'LOCAL_LESAO', 'total_parceirosSexo', 'CS_ZONA')
table(df$FAIXA_ETARIA)
table(df$total_parceirosSexo)
table(df_2025$CS_ZONA)
df <- df %>% select(!c('FAIXA_ETARIA', 'LESAO', 'LOCAL_LESAO', 'total_parceirosSexo'))
df_2025 <- df_2025 %>% select(!CS_ZONA)
df <- rbind(df, df_2025)
# Filtering only probable cases ########################################
df <- df %>% mutate(classi_fin = case_when(
CLASSI_FIN == 1 ~ 'Confirmado (laboratorial)',
CLASSI_FIN == 2 ~ 'Descartado',
CLASSI_FIN == 3 ~ 'Provavel',
CLASSI_FIN == 4 ~ 'Suspeito',
CLASSI_FIN == 5 ~ 'Perda de seguimento',
CLASSI_FIN == 6 ~ 'Exclusao',
CLASSI_FIN == 8 ~ 'Inconsistencia'
))
table(df$classi_fin)
df <- df %>% filter(CLASSI_FIN %in% c(1, 3))
# Gender, age and behaviour of cases ###################################
df <- df %>% mutate(cs_sexo = case_when(
CS_SEXO == 1 ~ 'Masculino',
CS_SEXO == 2 ~ 'Femenino',
CS_SEXO == 3 ~ 'Intersexo',
T ~ 'Ignorado'
))
table(df$cs_sexo)
df <- df %>% mutate(ident_genero = case_when(
IDENT_GENERO == 1 ~ 'Mulher cis',
IDENT_GENERO == 2 ~ 'Homem cis',
IDENT_GENERO == 3 ~ 'Mulher trans',
IDENT_GENERO == 4 ~ 'Homem trans',
IDENT_GENERO == 5 ~ 'Travesti',
IDENT_GENERO == 6 ~ 'Nao binario',
IDENT_GENERO == 7 ~ 'Nao se aplica',
T ~ 'Ignorado'
))
table(df$ident_genero)
table(df$cs_sexo, df$ident_genero)
df <- df %>% mutate(
comp_sexual = case_when(
COMP_SEXUAL == 1 ~ 'Relacoes sexuais com homens',
COMP_SEXUAL == 2 ~ 'Relacoes sexuais com mulheres',
COMP_SEXUAL == 3 ~ 'Relacoes sexuais com homens e mulheres',
COMP_SEXUAL == 9 ~ 'Ignorado ou Nao se aplica',
)
)
table(df$comp_sexual)
table(df$cs_sexo, df$comp_sexual)
table(df$comp_sexual, df$cs_sexo)
df <- df %>% mutate(
orienta_sexual = case_when(
ORIENTA_SEXUAL == 1 ~ 'Heterosexual',
ORIENTA_SEXUAL == 2 ~ 'Homossexual',
ORIENTA_SEXUAL == 3 ~ 'Bissexual',
ORIENTA_SEXUAL == 4 ~ 'Outra ',
ORIENTA_SEXUAL == 7 ~ 'Nao se aplica',
T ~ 'Ignorado'
)
)
table(df$orienta_sexual)
table(df$orienta_sexual, df$cs_sexo)
table(df$comp_sexual, df$cs_sexo)
table(df$comp_sexual, df$ident_genero)
hist(df$NU_IDADE_N)
# Probable source/place of infection ########################
df <- df %>% mutate(local_cont = case_when(
LOCAL_CONT == 1 ~ 'Domicilio',
LOCAL_CONT == 2 ~ 'Vizinhança',
LOCAL_CONT == 3 ~ 'Trabalho',
LOCAL_CONT == 4 ~ 'Creche/Escola',
LOCAL_CONT == 5 ~ 'Posto de Saude/Hospital',
LOCAL_CONT == 6 ~ 'Evento social (não sexual)',
LOCAL_CONT == 7 ~ 'Evento social (sexual)',
LOCAL_CONT == 8 ~ 'Outro',
T ~ 'Ignorado'
))
table(df$local_cont)
# Evolução ##############################################
df <- df %>% mutate(evolucao = case_when(
EVOLUCAO == 1 ~ 'Óbito por mpox',
EVOLUCAO == 2 ~ 'Cura',
EVOLUCAO == 3 ~ 'Óbito por outras causas',
EVOLUCAO == 4 ~ 'Em tratamento',
T ~ 'Ignorado'
))
table(df$evolucao)
# Incidence per state #######################################
pop <- read.csv2('pop_uf.csv')
pop <- pop %>% mutate(uf = substr(Unidade.da.Federacao, 1, 2)) %>%
select(!Unidade.da.Federacao) %>% select(uf, Populacao_residente)
pop <- pop %>% mutate(uf = as.numeric(uf))
pop
map_br <- read_state(code_state = 'all', year = 2020)
map_br <- map_br %>% left_join(pop, by = join_by(code_state == uf))
df_total <- df %>% mutate(sg_code = substr(ID_MN_RESI, 1, 2)) %>%
group_by(sg_code) %>% summarise(cases = n())
df_total <- df_total %>% ungroup()
df_total <- df_total %>% mutate(sg_code = as.numeric(sg_code))
map_br <- map_br %>% left_join(df_total, by = join_by(code_state == sg_code))
map_br <- map_br %>% mutate(incidence = (10**5)*(cases/Populacao_residente))
ggplot(data = map_br) +
geom_sf(aes(fill = incidence)) +
scale_fill_viridis_c() +
theme_map()
table(df$SG_UF)
# Incidence per municipality ###################################
pop <- read.csv2('pop_mun.csv')
pop <- pop %>% mutate(mun = substr(Municipio, 1, 6)) %>%
select(!Municipio) %>% select(mun, Populacao_residente)
pop <- pop %>% mutate(mun = as.numeric(mun))
pop
map_br <- read_municipality(year = 2020)
map_br <- map_br %>% mutate(code_muni_6 = substr(code_muni, 1, 6))
map_br <- map_br %>% mutate(code_muni_6 = as.numeric(code_muni_6))
map_br <- map_br %>% left_join(pop, by = join_by(code_muni_6 == mun))
df_total <- df %>% mutate(mun_code = ID_MN_RESI) %>%
group_by(mun_code) %>% summarise(cases = n())
df_total <- df_total %>% ungroup()
df_total <- df_total %>% mutate(mun_code = as.numeric(mun_code))
map_br <- map_br %>% left_join(df_total, by = join_by(code_muni_6 == mun_code))
map_br <- map_br %>% mutate(incidence = (10**5)*(cases/Populacao_residente))
ggplot(data = map_br) +
geom_sf(aes(fill = incidence)) +
scale_fill_viridis_c() +
theme_map()
table(df$SG_UF)
# Timeseries per state ########################################
df <- df %>% mutate(dt_sin_pri = dmy(DT_SIN_PRI)) %>%
mutate(anoepi = epiyear(dt_sin_pri)) %>%
mutate(epiweek = epiweek(dt_sin_pri))
df
df <- df %>% mutate(sg_code = substr(ID_MN_RESI, 1, 2)) %>%
group_by(anoepi, epiweek, sg_code) %>% summarise(cases = n())
df
df <- df %>% complete(anoepi, epiweek, sg_code)
df <- df %>% ungroup()
df <- df %>% complete(anoepi, epiweek, sg_code)
View(df)
df <- df %>% replace_na(0)
df <- df %>% mutate(cases = replace_na(cases, 0))
df <- df %>% mutate(tplot = anoepi + (epiweek/52)) %>%
select(sg_code, tplot, cases)
df <- df %>% mutate(sg_code = as.numeric(sg_code))
pop <- read.csv2('pop_uf.csv')
pop <- pop %>% mutate(uf = substr(Unidade.da.Federacao, 1, 2)) %>%
select(!Unidade.da.Federacao) %>% select(uf, Populacao_residente)
pop <- pop %>% mutate(uf = as.numeric(uf))
pop
df <- df %>% left_join(pop, by = join_by(sg_code == uf))
df <- df %>% mutate(incidence = (10**5)*(cases/Populacao_residente))
df <- df %>% ungroup() %>% select(sg_code, tplot, cases, incidence)
df <- df %>% mutate(sg_code = as.factor(as.character(sg_code)))
df
ggplot(data = df, aes(x = tplot, y = incidence, color = sg_code)) +
geom_point() +
theme_bw()
ggplot(data = df, aes(x = tplot, y = incidence, color = sg_code)) +
geom_line() +
theme_bw()
df_filt <- df %>% filter(sg_code %in% c(35, 33, 13, 53, 52))
ggplot(data = df_filt, aes(x = tplot, y = incidence, color = sg_code)) +
geom_line() +
theme_bw()
ggplot(data = df_filt, aes(x = tplot, y = incidence, color = sg_code)) +
geom_line() +
geom_point() +
theme_bw()
df_filt <- df %>% filter(sg_code %in% c(35, 33, 13, 53, 52)) %>%
mutate(sg_code = case_when(
sg_code == 13 ~ 'Amazonas',
sg_code == 33 ~ 'Rio de Janeiro',
sg_code == 35 ~ 'São Paulo',
sg_code == 52 ~ 'Goiás',
sg_code == 53 ~ 'DF'
))
ggplot(data = df_filt, aes(x = tplot, y = incidence, color = sg_code)) +
geom_line() +
geom_point() +
theme_bw()
gc()
library(readr)
library(tidyverse)
library(lubridate)
library(geobr)
library(ggplot2)
library(ggthemes)
# Loading data ##################################################
list_of_files <- list.files(path = "data/",
recursive = FALSE,
pattern = "\\.csv$",
full.names = TRUE)
df <- readr::read_csv2(list_of_files[1:3])
df_2025 <- readr::read_csv2(list_of_files[4])
# Adjusting columns, removing and joining ##############################
setdiff(colnames(df), colnames(df_2025))
setdiff(colnames(df_2025), colnames(df))
cols_to_remove <- c('FAIXA_ETARIA', 'LESAO', 'LOCAL_LESAO', 'total_parceirosSexo', 'CS_ZONA')
table(df$FAIXA_ETARIA)
table(df$total_parceirosSexo)
table(df_2025$CS_ZONA)
df <- df %>% select(!c('FAIXA_ETARIA', 'LESAO', 'LOCAL_LESAO', 'total_parceirosSexo'))
df_2025 <- df_2025 %>% select(!CS_ZONA)
df <- rbind(df, df_2025)
# Filtering only probable cases ########################################
df <- df %>% mutate(classi_fin = case_when(
CLASSI_FIN == 1 ~ 'Confirmado (laboratorial)',
CLASSI_FIN == 2 ~ 'Descartado',
CLASSI_FIN == 3 ~ 'Provavel',
CLASSI_FIN == 4 ~ 'Suspeito',
CLASSI_FIN == 5 ~ 'Perda de seguimento',
CLASSI_FIN == 6 ~ 'Exclusao',
CLASSI_FIN == 8 ~ 'Inconsistencia'
))
table(df$classi_fin)
df <- df %>% filter(CLASSI_FIN %in% c(1, 3))
# Gender, age and behaviour of cases ###################################
df <- df %>% mutate(cs_sexo = case_when(
CS_SEXO == 1 ~ 'Masculino',
CS_SEXO == 2 ~ 'Femenino',
CS_SEXO == 3 ~ 'Intersexo',
T ~ 'Ignorado'
))
table(df$cs_sexo)
df <- df %>% mutate(ident_genero = case_when(
IDENT_GENERO == 1 ~ 'Mulher cis',
IDENT_GENERO == 2 ~ 'Homem cis',
IDENT_GENERO == 3 ~ 'Mulher trans',
IDENT_GENERO == 4 ~ 'Homem trans',
IDENT_GENERO == 5 ~ 'Travesti',
IDENT_GENERO == 6 ~ 'Nao binario',
IDENT_GENERO == 7 ~ 'Nao se aplica',
T ~ 'Ignorado'
))
table(df$ident_genero)
table(df$cs_sexo, df$ident_genero)
df <- df %>% mutate(
comp_sexual = case_when(
COMP_SEXUAL == 1 ~ 'Relacoes sexuais com homens',
COMP_SEXUAL == 2 ~ 'Relacoes sexuais com mulheres',
COMP_SEXUAL == 3 ~ 'Relacoes sexuais com homens e mulheres',
COMP_SEXUAL == 9 ~ 'Ignorado ou Nao se aplica',
)
)
table(df$comp_sexual)
table(df$cs_sexo, df$comp_sexual)
table(df$comp_sexual, df$cs_sexo)
df <- df %>% mutate(
orienta_sexual = case_when(
ORIENTA_SEXUAL == 1 ~ 'Heterosexual',
ORIENTA_SEXUAL == 2 ~ 'Homossexual',
ORIENTA_SEXUAL == 3 ~ 'Bissexual',
ORIENTA_SEXUAL == 4 ~ 'Outra ',
ORIENTA_SEXUAL == 7 ~ 'Nao se aplica',
T ~ 'Ignorado'
)
)
table(df$orienta_sexual)
table(df$orienta_sexual, df$cs_sexo)
table(df$comp_sexual, df$cs_sexo)
table(df$comp_sexual, df$ident_genero)
hist(df$NU_IDADE_N)
# Probable source/place of infection ########################
df <- df %>% mutate(local_cont = case_when(
LOCAL_CONT == 1 ~ 'Domicilio',
LOCAL_CONT == 2 ~ 'Vizinhança',
LOCAL_CONT == 3 ~ 'Trabalho',
LOCAL_CONT == 4 ~ 'Creche/Escola',
LOCAL_CONT == 5 ~ 'Posto de Saude/Hospital',
LOCAL_CONT == 6 ~ 'Evento social (não sexual)',
LOCAL_CONT == 7 ~ 'Evento social (sexual)',
LOCAL_CONT == 8 ~ 'Outro',
T ~ 'Ignorado'
))
table(df$local_cont)
# Evolução ##############################################
df <- df %>% mutate(evolucao = case_when(
EVOLUCAO == 1 ~ 'Óbito por mpox',
EVOLUCAO == 2 ~ 'Cura',
EVOLUCAO == 3 ~ 'Óbito por outras causas',
EVOLUCAO == 4 ~ 'Em tratamento',
T ~ 'Ignorado'
))
table(df$evolucao)
# Incidence per state #######################################
pop <- read.csv2('pop_uf.csv')
pop <- pop %>% mutate(uf = substr(Unidade.da.Federacao, 1, 2)) %>%
select(!Unidade.da.Federacao) %>% select(uf, Populacao_residente)
pop <- pop %>% mutate(uf = as.numeric(uf))
pop
map_br <- read_state(code_state = 'all', year = 2020)
map_br <- map_br %>% left_join(pop, by = join_by(code_state == uf))
df_total <- df %>% mutate(sg_code = substr(ID_MN_RESI, 1, 2)) %>%
group_by(sg_code) %>% summarise(cases = n())
df_total <- df_total %>% ungroup()
df_total <- df_total %>% mutate(sg_code = as.numeric(sg_code))
map_br <- map_br %>% left_join(df_total, by = join_by(code_state == sg_code))
map_br <- map_br %>% mutate(incidence = (10**5)*(cases/Populacao_residente))
ggplot(data = map_br) +
geom_sf(aes(fill = incidence)) +
scale_fill_viridis_c() +
theme_map()
table(df$SG_UF)
# Incidence per municipality ###################################
pop <- read.csv2('pop_mun.csv')
pop <- pop %>% mutate(mun = substr(Municipio, 1, 6)) %>%
select(!Municipio) %>% select(mun, Populacao_residente)
pop <- pop %>% mutate(mun = as.numeric(mun))
pop
map_br <- read_municipality(year = 2020)
map_br <- map_br %>% mutate(code_muni_6 = substr(code_muni, 1, 6))
map_br <- map_br %>% mutate(code_muni_6 = as.numeric(code_muni_6))
map_br <- map_br %>% left_join(pop, by = join_by(code_muni_6 == mun))
df_total <- df %>% mutate(mun_code = ID_MN_RESI) %>%
group_by(mun_code) %>% summarise(cases = n())
df_total <- df_total %>% ungroup()
df_total <- df_total %>% mutate(mun_code = as.numeric(mun_code))
map_br <- map_br %>% left_join(df_total, by = join_by(code_muni_6 == mun_code))
map_br <- map_br %>% mutate(incidence = (10**5)*(cases/Populacao_residente))
ggplot(data = map_br) +
geom_sf(aes(fill = incidence)) +
scale_fill_viridis_c() +
theme_map()
table(df$SG_UF)
# Timeseries per state ########################################
df <- df %>% mutate(dt_sin_pri = dmy(DT_SIN_PRI)) %>%
mutate(anoepi = epiyear(dt_sin_pri)) %>%
mutate(epiweek = epiweek(dt_sin_pri))
df <- df %>% mutate(sg_code = substr(ID_MN_RESI, 1, 2)) %>%
group_by(anoepi, epiweek, sg_code) %>% summarise(cases = n())
df <- df %>% ungroup()
df <- df %>% complete(anoepi, epiweek, sg_code)
df <- df %>% mutate(cases = replace_na(cases, 0))
df <- df %>% mutate(tplot = anoepi + (epiweek/52)) %>%
select(sg_code, tplot, cases)
df <- df %>% mutate(sg_code = as.numeric(sg_code))
pop <- read.csv2('pop_uf.csv')
pop <- pop %>% mutate(uf = substr(Unidade.da.Federacao, 1, 2)) %>%
select(!Unidade.da.Federacao) %>% select(uf, Populacao_residente)
pop <- pop %>% mutate(uf = as.numeric(uf))
pop
df <- df %>% left_join(pop, by = join_by(sg_code == uf))
df <- df %>% mutate(incidence = (10**5)*(cases/Populacao_residente))
df <- df %>% ungroup() %>% select(sg_code, tplot, cases, incidence)
df <- df %>% mutate(sg_code = as.factor(as.character(sg_code)))
df
ggplot(data = df, aes(x = tplot, y = incidence, color = sg_code)) +
geom_line() +
theme_bw()
df_filt <- df %>% filter(sg_code %in% c(35, 33, 13, 53, 52)) %>%
mutate(sg_code = case_when(
sg_code == 13 ~ 'Amazonas',
sg_code == 33 ~ 'Rio de Janeiro',
sg_code == 35 ~ 'São Paulo',
sg_code == 52 ~ 'Goiás',
sg_code == 53 ~ 'DF'
))
ggplot(data = df_filt, aes(x = tplot, y = incidence, color = sg_code)) +
geom_line() +
geom_point() +
theme_bw()
